#ifndef _ASM_IRQ_H
#define _ASM_IRQ_H

/*
 *	linux/include/asm/irq.h
 *
 *	(C) 1992 Linus Torvalds
 *      2018.05.12 BiscuitOS <buddy.zhang@aliyun.com>
 */
extern unsigned long intr_count;

void IRQ0_interrupt();
void IRQ1_interrupt();
void IRQ2_interrupt();
void IRQ3_interrupt();
void IRQ4_interrupt();
void IRQ5_interrupt();
void IRQ6_interrupt();
void IRQ7_interrupt();
void IRQ8_interrupt();
void IRQ9_interrupt();
void IRQ10_interrupt();
void IRQ11_interrupt();
void IRQ12_interrupt();
void IRQ13_interrupt();
void IRQ14_interrupt();
void IRQ15_interrupt();
void fast_IRQ0_interrupt(); 
void fast_IRQ1_interrupt(); 
void fast_IRQ2_interrupt(); 
void fast_IRQ3_interrupt(); 
void fast_IRQ4_interrupt(); 
void fast_IRQ5_interrupt(); 
void fast_IRQ6_interrupt(); 
void fast_IRQ7_interrupt(); 
void fast_IRQ8_interrupt(); 
void fast_IRQ9_interrupt(); 
void fast_IRQ10_interrupt(); 
void fast_IRQ11_interrupt(); 
void fast_IRQ12_interrupt(); 
void fast_IRQ13_interrupt(); 
void fast_IRQ14_interrupt(); 
void fast_IRQ15_interrupt(); 
void bad_IRQ0_interrupt();
void bad_IRQ1_interrupt();
void bad_IRQ2_interrupt();
void bad_IRQ3_interrupt();
void bad_IRQ4_interrupt();
void bad_IRQ5_interrupt();
void bad_IRQ6_interrupt();
void bad_IRQ7_interrupt();
void bad_IRQ8_interrupt();
void bad_IRQ9_interrupt();
void bad_IRQ10_interrupt();
void bad_IRQ11_interrupt();
void bad_IRQ12_interrupt();
void bad_IRQ13_interrupt();
void bad_IRQ14_interrupt();
void bad_IRQ15_interrupt();

__asm__ ("\n\t"
"\n.align 2\n"
"IRQ0_interrupt:\n\t"
	"pushl $-2\n\t"
        "cld\n\t"
        "push %gs\n\t"
        "push %fs\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %ebp\n\t"
        "pushl %edi\n\t"
        "pushl %esi\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "pushl %ebx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "movl $0x17,%edx\n\t"
        "mov %dx,%fs\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x1,%al\n\t"         // Check mask
        "outb %al,$0x21\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0x20\n\t"
	"incl intr_count\n\t"
	"sti\n\t"
        "movl %esp,%ebx\n\t"
        "pushl %ebx\n\t"
        "pushl $0\n\t"            // check nr
        "call do_IRQ\n\t"
        "addl $8,%esp\n\t"
        "cli\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x1),%al\n\t" // check mask
        "outb %al,$0x21\n\t"
	"call do_bottom_half\n\t"
        "jmp ret_from_sys_call\n\t"
"\n.align 2\n"
"fast_IRQ0_interrupt:\n\t"
        "cld\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x1,%al\n\t"  // check mask
        "outb %al,$0x21\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0x20\n\t"
        "pushl $0\n\t"   // check nr
        "call do_fast_IRQ\n\t"
        "addl $4,%esp\n\t"
        "cli\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x1),%al\n\t"   // check mask
        "outb %al,$0x21\n\t"
        "popl %ecx\n\t"
        "popl %edx\n\t"
        "popl %eax\n\t"
        "pop %ds\n\t"
        "pop %es\n\t"
        "iret\n\t"
"\n\n.align 2\n"
"bad_IRQ0_interrupt:\n\t"
        "pushl %eax\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x1,%al\n\t"   // check mask
        "outb %al,$0x21\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0x20\n\t"
        "popl %eax\n\t"
        "iret");

__asm__ ("\n\t"
"\n.align 2\n"
"IRQ1_interrupt:\n\t"
	"pushl $-1\n\t"
        "cld\n\t"
        "push %gs\n\t"
        "push %fs\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %ebp\n\t"
        "pushl %edi\n\t"
        "pushl %esi\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "pushl %ebx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "movl $0x17,%edx\n\t"
        "mov %dx,%fs\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x2,%al\n\t"         // Check mask
        "outb %al,$0x21\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0x20\n\t"
	"incl intr_count\n\t"
        "sti\n\t"
        "movl %esp,%ebx\n\t"
        "pushl %ebx\n\t"
        "pushl $1\n\t"            // check nr
        "call do_IRQ\n\t"
        "addl $8,%esp\n\t"
        "cli\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x2),%al\n\t" // check mask
        "outb %al,$0x21\n\t"
	"call do_bottom_half\n\t"
        "jmp ret_from_sys_call\n\t"
"\n.align 2\n"
"fast_IRQ1_interrupt:\n\t"
        "cld\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x2,%al\n\t"  // check mask
        "outb %al,$0x21\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0x20\n\t"
        "pushl $1\n\t"   // check nr
        "call do_fast_IRQ\n\t"
        "addl $4,%esp\n\t"
        "cli\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x2),%al\n\t"   // check mask
        "outb %al,$0x21\n\t"
        "popl %ecx\n\t"
        "popl %edx\n\t"
        "popl %eax\n\t"
        "pop %ds\n\t"
        "pop %es\n\t"
        "iret\n\t"
"\n\n.align 2\n"
"bad_IRQ1_interrupt:\n\t"
        "pushl %eax\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x2,%al\n\t"   // check mask
        "outb %al,$0x21\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0x20\n\t"
        "popl %eax\n\t"
        "iret");

__asm__ ("\n\t"
"\n.align 2\n"
"IRQ2_interrupt:\n\t"
	"pushl $0\n\t"
        "cld\n\t"
        "push %gs\n\t"
        "push %fs\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %ebp\n\t"
        "pushl %edi\n\t"
        "pushl %esi\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "pushl %ebx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "movl $0x17,%edx\n\t"
        "mov %dx,%fs\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x4,%al\n\t"         // Check mask
        "outb %al,$0x21\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0x20\n\t"
	"incl intr_count\n\t"
        "sti\n\t"
        "movl %esp,%ebx\n\t"
        "pushl %ebx\n\t"
        "pushl $2\n\t"            // check nr
        "call do_IRQ\n\t"
        "addl $8,%esp\n\t"
        "cli\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x4),%al\n\t" // check mask
        "outb %al,$0x21\n\t"
	"call do_bottom_half\n\t"
        "jmp ret_from_sys_call\n\t"
"\n.align 2\n"
"fast_IRQ2_interrupt:\n\t"
        "cld\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x4,%al\n\t"  // check mask
        "outb %al,$0x21\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0x20\n\t"
        "pushl $2\n\t"   // check nr
        "call do_fast_IRQ\n\t"
        "addl $4,%esp\n\t"
        "cli\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x4),%al\n\t"   // check mask
        "outb %al,$0x21\n\t"
        "popl %ecx\n\t"
        "popl %edx\n\t"
        "popl %eax\n\t"
        "pop %ds\n\t"
        "pop %es\n\t"
        "iret\n\t"
"\n\n.align 2\n"
"bad_IRQ2_interrupt:\n\t"
        "pushl %eax\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x4,%al\n\t"   // check mask
        "outb %al,$0x21\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0x20\n\t"
        "popl %eax\n\t"
        "iret");

__asm__ ("\n\t"
"\n.align 2\n"
"IRQ3_interrupt:\n\t"
	"pushl $1\n\t"
        "cld\n\t"
        "push %gs\n\t"
        "push %fs\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %ebp\n\t"
        "pushl %edi\n\t"
        "pushl %esi\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "pushl %ebx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "movl $0x17,%edx\n\t"
        "mov %dx,%fs\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x8,%al\n\t"         // Check mask
        "outb %al,$0x21\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0x20\n\t"
	"incl intr_count\n\t"
        "sti\n\t"
        "movl %esp,%ebx\n\t"
        "pushl %ebx\n\t"
        "pushl $3\n\t"            // check nr
        "call do_IRQ\n\t"
        "addl $8,%esp\n\t"
        "cli\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x8),%al\n\t" // check mask
        "outb %al,$0x21\n\t"
	"call do_bottom_half\n\t"
        "jmp ret_from_sys_call\n\t"
"\n.align 2\n"
"fast_IRQ3_interrupt:\n\t"
        "cld\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x8,%al\n\t"  // check mask
        "outb %al,$0x21\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0x20\n\t"
        "pushl $3\n\t"   // check nr
        "call do_fast_IRQ\n\t"
        "addl $4,%esp\n\t"
        "cli\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x8),%al\n\t"   // check mask
        "outb %al,$0x21\n\t"
        "popl %ecx\n\t"
        "popl %edx\n\t"
        "popl %eax\n\t"
        "pop %ds\n\t"
        "pop %es\n\t"
        "iret\n\t"
"\n\n.align 2\n"
"bad_IRQ3_interrupt:\n\t"
        "pushl %eax\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x8,%al\n\t"   // check mask
        "outb %al,$0x21\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0x20\n\t"
        "popl %eax\n\t"
        "iret");

__asm__ ("\n\t"
"\n.align 2\n"
"IRQ4_interrupt:\n\t"
	"pushl $2\n\t"
        "cld\n\t"
        "push %gs\n\t"
        "push %fs\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %ebp\n\t"
        "pushl %edi\n\t"
        "pushl %esi\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "pushl %ebx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "movl $0x17,%edx\n\t"
        "mov %dx,%fs\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x10,%al\n\t"         // Check mask
        "outb %al,$0x21\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0x20\n\t"
	"incl intr_count\n\t"
        "sti\n\t"
        "movl %esp,%ebx\n\t"
        "pushl %ebx\n\t"
        "pushl $4\n\t"            // check nr
        "call do_IRQ\n\t"
        "addl $8,%esp\n\t"
        "cli\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x10),%al\n\t" // check mask
        "outb %al,$0x21\n\t"
	"call do_bottom_half\n\t"
        "jmp ret_from_sys_call\n\t"
"\n.align 2\n"
"fast_IRQ4_interrupt:\n\t"
        "cld\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x10,%al\n\t"  // check mask
        "outb %al,$0x21\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0x20\n\t"
        "pushl $4\n\t"   // check nr
        "call do_fast_IRQ\n\t"
        "addl $4,%esp\n\t"
        "cli\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x10),%al\n\t"   // check mask
        "outb %al,$0x21\n\t"
        "popl %ecx\n\t"
        "popl %edx\n\t"
        "popl %eax\n\t"
        "pop %ds\n\t"
        "pop %es\n\t"
        "iret\n\t"
"\n\n.align 2\n"
"bad_IRQ4_interrupt:\n\t"
        "pushl %eax\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x10,%al\n\t"   // check mask
        "outb %al,$0x21\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0x20\n\t"
        "popl %eax\n\t"
        "iret");

__asm__ ("\n\t"
"\n.align 2\n"
"IRQ5_interrupt:\n\t"
	"pushl $3\n\t"
        "cld\n\t"
        "push %gs\n\t"
        "push %fs\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %ebp\n\t"
        "pushl %edi\n\t"
        "pushl %esi\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "pushl %ebx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "movl $0x17,%edx\n\t"
        "mov %dx,%fs\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x20,%al\n\t"         // Check mask
        "outb %al,$0x21\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0x20\n\t"
	"incl intr_count\n\t"
        "sti\n\t"
        "movl %esp,%ebx\n\t"
        "pushl %ebx\n\t"
        "pushl $5\n\t"            // check nr
        "call do_IRQ\n\t"
        "addl $8,%esp\n\t"
        "cli\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x20),%al\n\t" // check mask
        "outb %al,$0x21\n\t"
	"call do_bottom_half\n\t"
        "jmp ret_from_sys_call\n\t"
"\n.align 2\n"
"fast_IRQ5_interrupt:\n\t"
        "cld\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x20,%al\n\t"  // check mask
        "outb %al,$0x21\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0x20\n\t"
        "pushl $5\n\t"   // check nr
        "call do_fast_IRQ\n\t"
        "addl $4,%esp\n\t"
        "cli\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x20),%al\n\t"   // check mask
        "outb %al,$0x21\n\t"
        "popl %ecx\n\t"
        "popl %edx\n\t"
        "popl %eax\n\t"
        "pop %ds\n\t"
        "pop %es\n\t"
        "iret\n\t"
"\n\n.align 2\n"
"bad_IRQ5_interrupt:\n\t"
        "pushl %eax\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x20,%al\n\t"   // check mask
        "outb %al,$0x21\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0x20\n\t"
        "popl %eax\n\t"
        "iret");

__asm__ ("\n\t"
"\n.align 2\n"
"IRQ6_interrupt:\n\t"
	"pushl $4\n\t"
        "cld\n\t"
        "push %gs\n\t"
        "push %fs\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %ebp\n\t"
        "pushl %edi\n\t"
        "pushl %esi\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "pushl %ebx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "movl $0x17,%edx\n\t"
        "mov %dx,%fs\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x40,%al\n\t"         // Check mask
        "outb %al,$0x21\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0x20\n\t"
	"incl intr_count\n\t"
        "sti\n\t"
        "movl %esp,%ebx\n\t"
        "pushl %ebx\n\t"
        "pushl $6\n\t"            // check nr
        "call do_IRQ\n\t"
        "addl $8,%esp\n\t"
        "cli\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x40),%al\n\t" // check mask
        "outb %al,$0x21\n\t"
	"call do_bottom_half\n\t"
        "jmp ret_from_sys_call\n\t"
"\n.align 2\n"
"fast_IRQ6_interrupt:\n\t"
        "cld\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x40,%al\n\t"  // check mask
        "outb %al,$0x21\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0x20\n\t"
        "pushl $6\n\t"   // check nr
        "call do_fast_IRQ\n\t"
        "addl $4,%esp\n\t"
        "cli\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x40),%al\n\t"   // check mask
        "outb %al,$0x21\n\t"
        "popl %ecx\n\t"
        "popl %edx\n\t"
        "popl %eax\n\t"
        "pop %ds\n\t"
        "pop %es\n\t"
        "iret\n\t"
"\n\n.align 2\n"
"bad_IRQ6_interrupt:\n\t"
        "pushl %eax\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x40,%al\n\t"   // check mask
        "outb %al,$0x21\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0x20\n\t"
        "popl %eax\n\t"
        "iret");

__asm__ ("\n\t"
"\n.align 2\n"
"IRQ7_interrupt:\n\t"
	"pushl $5\n\t"
        "cld\n\t"
        "push %gs\n\t"
        "push %fs\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %ebp\n\t"
        "pushl %edi\n\t"
        "pushl %esi\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "pushl %ebx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "movl $0x17,%edx\n\t"
        "mov %dx,%fs\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x80,%al\n\t"         // Check mask
        "outb %al,$0x21\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0x20\n\t"
	"incl intr_count\n\t"
        "sti\n\t"
        "movl %esp,%ebx\n\t"
        "pushl %ebx\n\t"
        "pushl $7\n\t"            // check nr
        "call do_IRQ\n\t"
        "addl $8,%esp\n\t"
        "cli\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x80),%al\n\t" // check mask
        "outb %al,$0x21\n\t"
	"call do_bottom_half\n\t"
        "jmp ret_from_sys_call\n\t"
"\n.align 2\n"
"fast_IRQ7_interrupt:\n\t"
        "cld\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x80,%al\n\t"  // check mask
        "outb %al,$0x21\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0x20\n\t"
        "pushl $7\n\t"   // check nr
        "call do_fast_IRQ\n\t"
        "addl $4,%esp\n\t"
        "cli\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x80),%al\n\t"   // check mask
        "outb %al,$0x21\n\t"
        "popl %ecx\n\t"
        "popl %edx\n\t"
        "popl %eax\n\t"
        "pop %ds\n\t"
        "pop %es\n\t"
        "iret\n\t"
"\n\n.align 2\n"
"bad_IRQ7_interrupt:\n\t"
        "pushl %eax\n\t"
        "inb $0x21,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x80,%al\n\t"   // check mask
        "outb %al,$0x21\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0x20\n\t"
        "popl %eax\n\t"
        "iret");


__asm__ ("\n\t"
"\n.align 2\n"
"IRQ8_interrupt:\n\t"
        "pushl $6\n\t"
        "cld\n\t"
        "push %gs\n\t"
        "push %fs\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %ebp\n\t"
        "pushl %edi\n\t"
        "pushl %esi\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "pushl %ebx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "movl $0x17,%edx\n\t"
        "mov %dx,%fs\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x01,%al\n\t" // check mask
        "outb %al,$0xA1\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0xA0\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\toutb %al,$0x20\n\t"
	"incl intr_count\n\t"
        "sti\n\t"
        "movl %esp,%ebx\n\t"
        "pushl %ebx\n\t"
        "pushl $0x08\n\t"   // check nr
        "call do_IRQ\n\t"
        "addl $8,%esp\n\t"
        "cli\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x01),%al\n\t"  // check mask
        "outb %al,$0xA1\n\t"
	"call do_bottom_half\n\t"
        "jmp ret_from_sys_call\n"
"\n.align 2\n"
"fast_IRQ8_interrupt:\n\t"
        "cld\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x01,%al\n\t"  // check mask
        "outb %al,$0xA1\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0xA0\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\toutb %al,$0x20\n\t"
        "pushl $0x08\n\t"  // check nr
        "call do_fast_IRQ\n\t"
        "addl $4,%esp\n\t"
        "cli\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x01),%al\n\t"  // check mask
        "outb %al,$0xA1\n\t"
        "popl %ecx\n\t"
        "popl %edx\n\t"
        "popl %eax\n\t"
        "pop %ds\n\t"
        "pop %es\n\t"
        "iret\n\r"
"\n\n.align 2\n"
"bad_IRQ8_interrupt:\n\t"
        "pushl %eax\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x01,%al\n\t"    // check mask
        "outb %al,$0xA1\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0xA0\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\toutb %al,$0x20\n\t"
        "popl %eax\n\t"
        "iret");

__asm__ ("\n\t"
"\n.align 2\n"
"IRQ9_interrupt:\n\t"
        "pushl $7\n\t"
        "cld\n\t"
        "push %gs\n\t"
        "push %fs\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %ebp\n\t"
        "pushl %edi\n\t"
        "pushl %esi\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "pushl %ebx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "movl $0x17,%edx\n\t"
        "mov %dx,%fs\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x02,%al\n\t" // check mask
        "outb %al,$0xA1\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0xA0\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\toutb %al,$0x20\n\t"
	"incl intr_count\n\t"
        "sti\n\t"
        "movl %esp,%ebx\n\t"
        "pushl %ebx\n\t"
        "pushl $0x09\n\t"   // check nr
        "call do_IRQ\n\t"
        "addl $8,%esp\n\t"
        "cli\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x02),%al\n\t"  // check mask
        "outb %al,$0xA1\n\t"
	"call do_bottom_half\n\t"
        "jmp ret_from_sys_call\n"
"\n.align 2\n"
"fast_IRQ9_interrupt:\n\t"
        "cld\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x02,%al\n\t"  // check mask
        "outb %al,$0xA1\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0xA0\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\toutb %al,$0x20\n\t"
        "pushl $0x09\n\t"  // check nr
        "call do_fast_IRQ\n\t"
        "addl $4,%esp\n\t"
        "cli\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x02),%al\n\t"  // check mask
        "outb %al,$0xA1\n\t"
        "popl %ecx\n\t"
        "popl %edx\n\t"
        "popl %eax\n\t"
        "pop %ds\n\t"
        "pop %es\n\t"
        "iret\n\r"
"\n\n.align 2\n"
"bad_IRQ9_interrupt:\n\t"
        "pushl %eax\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x02,%al\n\t"    // check mask
        "outb %al,$0xA1\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0xA0\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\toutb %al,$0x20\n\t"
        "popl %eax\n\t"
        "iret");

__asm__ ("\n\t"
"\n.align 2\n"
"IRQ10_interrupt:\n\t"
        "pushl $8\n\t"
        "cld\n\t"
        "push %gs\n\t"
        "push %fs\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %ebp\n\t"
        "pushl %edi\n\t"
        "pushl %esi\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "pushl %ebx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "movl $0x17,%edx\n\t"
        "mov %dx,%fs\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x04,%al\n\t" // check mask
        "outb %al,$0xA1\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0xA0\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\toutb %al,$0x20\n\t"
	"incl intr_count\n\t"
        "sti\n\t"
        "movl %esp,%ebx\n\t"
        "pushl %ebx\n\t"
        "pushl $0x0a\n\t"   // check nr
        "call do_IRQ\n\t"
        "addl $8,%esp\n\t"
        "cli\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x04),%al\n\t"  // check mask
        "outb %al,$0xA1\n\t"
	"call do_bottom_half\n\t"
        "jmp ret_from_sys_call\n"
"\n.align 2\n"
"fast_IRQ10_interrupt:\n\t"
        "cld\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x04,%al\n\t"  // check mask
        "outb %al,$0xA1\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0xA0\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\toutb %al,$0x20\n\t"
        "pushl $0x0a\n\t"  // check nr
        "call do_fast_IRQ\n\t"
        "addl $4,%esp\n\t"
        "cli\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x04),%al\n\t"  // check mask
        "outb %al,$0xA1\n\t"
        "popl %ecx\n\t"
        "popl %edx\n\t"
        "popl %eax\n\t"
        "pop %ds\n\t"
        "pop %es\n\t"
        "iret\n\r"
"\n\n.align 2\n"
"bad_IRQ10_interrupt:\n\t"
        "pushl %eax\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x04,%al\n\t"    // check mask
        "outb %al,$0xA1\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0xA0\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\toutb %al,$0x20\n\t"
        "popl %eax\n\t"
        "iret");

__asm__ ("\n\t"
"\n.align 2\n"
"IRQ11_interrupt:\n\t"
        "pushl $9\n\t"
        "cld\n\t"
        "push %gs\n\t"
        "push %fs\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %ebp\n\t"
        "pushl %edi\n\t"
        "pushl %esi\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "pushl %ebx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "movl $0x17,%edx\n\t"
        "mov %dx,%fs\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x08,%al\n\t" // check mask
        "outb %al,$0xA1\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0xA0\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\toutb %al,$0x20\n\t"
	"incl intr_count\n\t"
        "sti\n\t"
        "movl %esp,%ebx\n\t"
        "pushl %ebx\n\t"
        "pushl $0x0b\n\t"   // check nr
        "call do_IRQ\n\t"
        "addl $8,%esp\n\t"
        "cli\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x08),%al\n\t"  // check mask
        "outb %al,$0xA1\n\t"
	"call do_bottom_half\n\t"
        "jmp ret_from_sys_call\n"
"\n.align 2\n"
"fast_IRQ11_interrupt:\n\t"
        "cld\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x08,%al\n\t"  // check mask
        "outb %al,$0xA1\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0xA0\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\toutb %al,$0x20\n\t"
        "pushl $0x0b\n\t"  // check nr
        "call do_fast_IRQ\n\t"
        "addl $4,%esp\n\t"
        "cli\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x08),%al\n\t"  // check mask
        "outb %al,$0xA1\n\t"
        "popl %ecx\n\t"
        "popl %edx\n\t"
        "popl %eax\n\t"
        "pop %ds\n\t"
        "pop %es\n\t"
        "iret\n\r"
"\n\n.align 2\n"
"bad_IRQ11_interrupt:\n\t"
        "pushl %eax\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x08,%al\n\t"    // check mask
        "outb %al,$0xA1\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0xA0\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\toutb %al,$0x20\n\t"
        "popl %eax\n\t"
        "iret");

__asm__ ("\n\t"
"\n.align 2\n"
"IRQ12_interrupt:\n\t"
        "pushl $10\n\t"
        "cld\n\t"
        "push %gs\n\t"
        "push %fs\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %ebp\n\t"
        "pushl %edi\n\t"
        "pushl %esi\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "pushl %ebx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "movl $0x17,%edx\n\t"
        "mov %dx,%fs\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x10,%al\n\t" // check mask
        "outb %al,$0xA1\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0xA0\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\toutb %al,$0x20\n\t"
	"incl intr_count\n\t"
        "sti\n\t"
        "movl %esp,%ebx\n\t"
        "pushl %ebx\n\t"
        "pushl $0x0c\n\t"   // check nr
        "call do_IRQ\n\t"
        "addl $8,%esp\n\t"
        "cli\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x10),%al\n\t"  // check mask
        "outb %al,$0xA1\n\t"
	"call do_bottom_half\n\t"
        "jmp ret_from_sys_call\n"
"\n.align 2\n"
"fast_IRQ12_interrupt:\n\t"
        "cld\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x10,%al\n\t"  // check mask
        "outb %al,$0xA1\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0xA0\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\toutb %al,$0x20\n\t"
        "pushl $0x0c\n\t"  // check nr
        "call do_fast_IRQ\n\t"
        "addl $4,%esp\n\t"
        "cli\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x10),%al\n\t"  // check mask
        "outb %al,$0xA1\n\t"
        "popl %ecx\n\t"
        "popl %edx\n\t"
        "popl %eax\n\t"
        "pop %ds\n\t"
        "pop %es\n\t"
        "iret\n\r"
"\n\n.align 2\n"
"bad_IRQ12_interrupt:\n\t"
        "pushl %eax\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x10,%al\n\t"    // check mask
        "outb %al,$0xA1\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0xA0\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\toutb %al,$0x20\n\t"
        "popl %eax\n\t"
        "iret");

__asm__ ("\n\t"
"\n.align 2\n"
"IRQ13_interrupt:\n\t"
        "pushl $11\n\t"
        "cld\n\t"
        "push %gs\n\t"
        "push %fs\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %ebp\n\t"
        "pushl %edi\n\t"
        "pushl %esi\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "pushl %ebx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "movl $0x17,%edx\n\t"
        "mov %dx,%fs\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x20,%al\n\t" // check mask
        "outb %al,$0xA1\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0xA0\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\toutb %al,$0x20\n\t"
	"incl intr_count\n\t"
        "sti\n\t"
        "movl %esp,%ebx\n\t"
        "pushl %ebx\n\t"
        "pushl $0x0d\n\t"   // check nr
        "call do_IRQ\n\t"
        "addl $8,%esp\n\t"
        "cli\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x20),%al\n\t"  // check mask
        "outb %al,$0xA1\n\t"
	"call do_bottom_half\n\t"
        "jmp ret_from_sys_call\n"
"\n.align 2\n"
"fast_IRQ13_interrupt:\n\t"
        "cld\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x20,%al\n\t"  // check mask
        "outb %al,$0xA1\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0xA0\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\toutb %al,$0x20\n\t"
        "pushl $0x0d\n\t"  // check nr
        "call do_fast_IRQ\n\t"
        "addl $4,%esp\n\t"
        "cli\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x20),%al\n\t"  // check mask
        "outb %al,$0xA1\n\t"
        "popl %ecx\n\t"
        "popl %edx\n\t"
        "popl %eax\n\t"
        "pop %ds\n\t"
        "pop %es\n\t"
        "iret\n\r"
"\n\n.align 2\n"
"bad_IRQ13_interrupt:\n\t"
        "pushl %eax\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x20,%al\n\t"    // check mask
        "outb %al,$0xA1\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0xA0\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\toutb %al,$0x20\n\t"
        "popl %eax\n\t"
        "iret");

__asm__ ("\n\t"
"\n.align 2\n"
"IRQ14_interrupt:\n\t"
        "pushl $12\n\t"
        "cld\n\t"
        "push %gs\n\t"
        "push %fs\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %ebp\n\t"
        "pushl %edi\n\t"
        "pushl %esi\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "pushl %ebx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "movl $0x17,%edx\n\t"
        "mov %dx,%fs\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x40,%al\n\t" // check mask
        "outb %al,$0xA1\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0xA0\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\toutb %al,$0x20\n\t"
	"incl intr_count\n\t"
        "sti\n\t"
        "movl %esp,%ebx\n\t"
        "pushl %ebx\n\t"
        "pushl $0x0e\n\t"   // check nr
        "call do_IRQ\n\t"
        "addl $8,%esp\n\t"
        "cli\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x40),%al\n\t"  // check mask
        "outb %al,$0xA1\n\t"
	"call do_bottom_half\n\t"
        "jmp ret_from_sys_call\n"
"\n.align 2\n"
"fast_IRQ14_interrupt:\n\t"
        "cld\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x40,%al\n\t"  // check mask
        "outb %al,$0xA1\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0xA0\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\toutb %al,$0x20\n\t"
        "pushl $0x0e\n\t"  // check nr
        "call do_fast_IRQ\n\t"
        "addl $4,%esp\n\t"
        "cli\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x40),%al\n\t"  // check mask
        "outb %al,$0xA1\n\t"
        "popl %ecx\n\t"
        "popl %edx\n\t"
        "popl %eax\n\t"
        "pop %ds\n\t"
        "pop %es\n\t"
        "iret\n\r"
"\n\n.align 2\n"
"bad_IRQ14_interrupt:\n\t"
        "pushl %eax\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x40,%al\n\t"    // check mask
        "outb %al,$0xA1\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0xA0\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\toutb %al,$0x20\n\t"
        "popl %eax\n\t"
        "iret");

__asm__ ("\n\t"
"\n.align 2\n"
"IRQ15_interrupt:\n\t"
        "pushl $13\n\t"
        "cld\n\t"
        "push %gs\n\t"
        "push %fs\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %ebp\n\t"
        "pushl %edi\n\t"
        "pushl %esi\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "pushl %ebx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "movl $0x17,%edx\n\t"
        "mov %dx,%fs\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x80,%al\n\t" // check mask
        "outb %al,$0xA1\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0xA0\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\toutb %al,$0x20\n\t"
	"incl intr_count\n\t"
        "sti\n\t"
        "movl %esp,%ebx\n\t"
        "pushl %ebx\n\t"
        "pushl $0x0f\n\t"   // check nr
        "call do_IRQ\n\t"
        "addl $8,%esp\n\t"
        "cli\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x80),%al\n\t"  // check mask
        "outb %al,$0xA1\n\t"
	"call do_bottom_half\n\t"
        "jmp ret_from_sys_call\n"
"\n.align 2\n"
"fast_IRQ15_interrupt:\n\t"
        "cld\n\t"
        "push %es\n\t"
        "push %ds\n\t"
        "pushl %eax\n\t"
        "pushl %edx\n\t"
        "pushl %ecx\n\t"
        "movl $0x10,%edx\n\t"
        "mov %dx,%ds\n\t"
        "mov %dx,%es\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x80,%al\n\t"  // check mask
        "outb %al,$0xA1\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0xA0\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\toutb %al,$0x20\n\t"
        "pushl $0x0f\n\t"  // check nr
        "call do_fast_IRQ\n\t"
        "addl $4,%esp\n\t"
        "cli\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tandb $~(0x80),%al\n\t"  // check mask
        "outb %al,$0xA1\n\t"
        "popl %ecx\n\t"
        "popl %edx\n\t"
        "popl %eax\n\t"
        "pop %ds\n\t"
        "pop %es\n\t"
        "iret\n\r"
"\n\n.align 2\n"
"bad_IRQ15_interrupt:\n\t"
        "pushl %eax\n\t"
        "inb $0xA1,%al\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\torb $0x80,%al\n\t"    // check mask
        "outb %al,$0xA1\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\tmovb $0x20,%al\n\t"
        "outb %al,$0xA0\n\t"
        "jmp 1f\n"
        "1:\tjmp 1f\n"
        "1:\toutb %al,$0x20\n\t"
        "popl %eax\n\t"
        "iret");

#endif
