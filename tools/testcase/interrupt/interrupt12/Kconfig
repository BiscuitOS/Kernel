#
# Interrupt 12 - Stack Fault Exception (#SS)
#
menu "Interrupt 12 - Stack Fault Exception (#SS)"

config DEBUG_INTERRUPT12
        bool "Interrupt 12 - Stack Fault Exception (#SS)"
        help
	  Indicates that one of the following stack related conditions
	  was detected:
	  * A limit violation is detected during an operation that 
	    refers to the SS register. Operations that can cause a
	    limit violation include stack-oriented instructions such
	    as POP, PUSH, CALL, RET, ENTER, and LEVE, as well as other
	    memory references which implicitly or explicitly use the
	    SS register (for example, `MOV AX, [BP+6]` or `MOV AX, 
	    SS:[EAX+6]`). The `ENTER` instruction generates this 
	    exception when there is not enough stack space for 
	    allocating local variables.
	  * A not-present stack segment is detected when attempting to
	    load the SS register. This violation can occur during the
	    exception of a stack switch, a CALL instruction to a 
	    different privilegel level, a return to a different 
	    privilege level, an LSS instruction, or a MOV or POP
	    instruction to the SS register.

if DEBUG_INTERRUPT12

config DEBUG_SOFT_INT12
	bool "Trigger #SS by soft-interrupt 'int $0x0C'"
	help
	  Trigger #SS by soft interrupt 'int $0xC'

endif # End of DEBUG_INTERRUPT

endmenu
